#include<bits/stdc++.h>
using namespace std;
struct node{
    int data;
    node *next;
    node (int x){
        data=x;
        next=NULL;
    }
};
void printl(node *head){
    node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
void recprint(node *head){
    if(head==NULL) return;
    cout<<head->data<<" ";
    recprint(head->next);
}

//insert at begin
node *insertbig(node *head,int x){
    node *temp=new node(x);
    temp->next=head;
    return temp;
}
//insert at comp
node *insertcomp(node *head, int x){
    node *temp=new node(x);
    node *curr=head;
    if(head==NULL){
        return temp;}
    while(curr->next!=NULL){
        curr=curr->next;
    }
    curr->next=temp;
    return head;
}

//delete at begin
node *delebigin(node *head){
    if(head==NULL){
    return NULL;
    }
    node *temp=head;
    head=head->next;
    delete(temp);
    return head;
}
//delete at comp
node *delecom(node *head){
    if(head==NULL){
    return NULL;
    }
    if(head->next==NULL){
    delete(head);
    return NULL;
    }
    node *temp=head;
    while(temp->next->next!=NULL){
        temp=temp->next;
    }
    node *q=temp->next;
    temp->next=NULL;
    delete(q);
    return head;
}
int main(){
 node* head=new node(1000);
 head->next=new node(2000);
 head->next->next=new node(3000);
 printl(head);
 cout<<endl;
 recprint(head);
  cout<<endl;
 head=insertbig(head,4000);
 recprint(head);
   cout<<endl;
 head=insertcomp(head,5000);
 recprint(head);
   cout<<endl;
 head=delebigin(head);
 recprint(head);
   cout<<endl;
   head=delecom(head);
   recprint(head);
   cout<<endl;
 return 0;
}
