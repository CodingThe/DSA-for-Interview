#include <bits/stdc++.h>
using namespace std;

vector<int> FindLargestandSecond(int arr[],int n){
    //      //***********Method1**************** Using for loop
        // int max = arr[0], max2= -1;      //initially max=first element of the array and second max is -1
        // for(int i=1;i<n;i++){           //start loop from the second element and go till the whole array
        //     if(arr[i]>max){             //if we found any element greater than max will 
        //         max2=max;               //give the value of max to max2(to the second element)
        //         max=arr[i];             //assign new max value to first max
                
        //     }
        //     else if(arr[i]<max and arr[i]>max2){ //if we found any value in array which is larger than the 
        //         max2=arr[i];                    //max2 and smaller than the max then we only change max2
        //     }                                   //to that value

        // }
        // vector<int>v;                           //since this fuction is asking answer in the form of vector
        // v.push_back(max);                       //we will put bouth element in the vector
        // v.push_back(max2);
        // return v;                               //return the vector
        
         
        //  // *********Method2********** Using the Sorting                      
        //  sort(arr,arr+n);                        //sort the whole array  
        //  vector<int>v;                           //create the vector 
        //  v.push_back(arr[n-1]);                  //push the highest value of array in the vector 
        //  int i=n-2;                              //create a i variable for check 
        //  while(arr[i]==arr[n-1] and i>=0){       //weather the second max element is not equal to max element
        //      i--;
        //  }
        //  if(i>=0){                               //if we find second max unique element we push it in vector
        //     v.push_back(arr[i]); 
        //  }
        //  else{                                   //otherwise if there are element with only one value
        //      v.push_back(-1);                    //or one element in the array we push -1 in second place
        //  }
        //  return v;                               //return the vector
         
         
         
        //  //************Method3************ Using the max_heap
         priority_queue<int>pq;                     //creating max heap
         for(int i=0;i<n;i++){                      //pushing all elements in the max heap
             pq.push(arr[i]);
        
         }
         vector<int>v;                              //creating vector
         v.push_back(pq.top());                     //push max value in vector
         pq.pop();                                  //poping that max value from the max heap
         while(pq.top()==v[0] and pq.empty()==false){ //cheking weather the next element of max heap is equal to
             pq.pop();                                  //max value or max heap got empty
         }
         if(pq.empty()==true){                          //if max heap gone empty then push -1 in place of   
                v.push_back(-1);                        //second largest unique element
            }
            else{                                       
             v.push_back(pq.top());                     //else pushing second largest element in the heap
            }
         
         return v;                                      //returning the vector

         
    }

int main()
{
     int arr[] = {100, 200, 200, 300, 100, 500};
    int n = sizeof(arr) / sizeof(arr[0]);           // Calculate the size of the array
    vector<int> ans = FindLargestandSecond(arr, n);
    for (const auto &it : ans) {
        cout << it << " ";
    }
    return 0;
}
