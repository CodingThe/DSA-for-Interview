class Solution {
  public:
   int smallestSubstring(std::string S) {
    if (S.find('0') == std::string::npos ||
        S.find('1') == std::string::npos ||
        S.find('2') == std::string::npos) {
        return -1;
    }

    int count = static_cast<int>(S.length());

    for (int i = 0; i < S.size(); i++) {
        std::string str = "";
        str += S[i];

        for (int j = i + 1; j < S.size(); j++) {
            str += S[j];

            if (str.find('0') != std::string::npos &&
                str.find('1') != std::string::npos &&
                str.find('2') != std::string::npos) {
                count = std::min(count, static_cast<int>(str.length()));
                break;  
            }
        }
    }

    return count;
}
}
